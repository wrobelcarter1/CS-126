# Jackson Braudaway, Carter Wrobet# jeb523, cjw446# Lab 8 Grade Calculator II# 11-6-17def read_grade_data(filehandle):    scores = {}    for line in filehandle:        splitline = line.split(" ", 2)        splitline[1] = int(splitline[1].strip('%'))        splitline[2] = splitline[2].replace(' ', '')        splitline[2] = splitline[2].strip('\n')        splitline[2] = splitline[2].split(",")        scores[splitline[0]] = [splitline[1], splitline[2]]    # print(scores)    homework_weight = scores['Homework'][0] / 100    quiz_weight = scores['Quizzes'][0] / 100    test_weight = scores['Tests'][0] / 100    project_weight = scores['Projects'][0] / 100    final_weight = scores['Final'][0] / 100    sum_scores_homework = []    sum_total_homework = []    for i in scores["Homework"][1]:        i = i.split("/")        sum_scores_homework.append(int(i[0]))        sum_total_homework.append(int(i[1]))    print(sum_scores_homework)    print(sum_total_homework)    sum_scores_quizzes = []    sum_total_quizzes = []    for i in scores["Quizzes"][1]:        i = i.split("/")        sum_scores_quizzes.append(int(i[0]))        sum_total_quizzes.append(int(i[1]))    print(sum_scores_quizzes)    print(sum_total_quizzes)    sum_scores_tests = []    sum_total_tests = []    for i in scores["Tests"][1]:        i = i.split("/")        sum_scores_tests.append(int(i[0]))        sum_total_tests.append(int(i[1]))    sum_scores_projects = []    sum_total_projects = []    for i in scores["Projects"][1]:        i = i.split("/")        sum_scores_projects.append(int(i[0]))        sum_total_projects.append(int(i[1]))    print(sum_scores_projects)    print(sum_total_projects)    sum_scores_final = []    sum_total_final = []    for i in scores["Final"][1]:        i = i.split("/")        sum_scores_final.append(int(i[0]))        sum_total_final.append(int(i[1]))        # Homework functions are defined here and the variables for the homework score    homework_total = sum(sum_scores_homework)    homework_total_max = sum(sum_total_homework)    total_homework_score = round(average(homework_total, homework_total_max))    percent_total_homework_score = total_homework_score / 100    weighted_total_homework = round(average_weighted(homework_total, homework_total_max, homework_weight), 2)    # Quiz functions are defined here and the vaibles for the quiz score    quiz_total = sum(sum_scores_quizzes)    quiz_total_max = sum(sum_total_quizzes)    total_quiz_score = round(average(quiz_total, quiz_total_max))    percent_total_quiz_score = total_quiz_score / 100    weighted_total_quiz = round(average_weighted(quiz_total, quiz_total_max, quiz_weight), 2)    # Test functions are definered here and the variables for the qiiz score    test_total = sum(sum_scores_tests)    test_total_max = sum(sum_total_tests)    total_test_score = round(average(test_total, test_total_max))    percent_total_test_score = total_test_score / 100    weighted_total_test = round(average_weighted(test_total, test_total_max, test_weight), 2)    # Project functions are defined here    project_total = sum(sum_scores_projects)    project_total_max = sum(sum_total_projects)    total_project_score = round(average(project_total, project_total_max))    percent_total_project_score = total_project_score / 100    weighted_total_project = round(average_weighted(project_total, project_total_max, project_weight), 2)    final_total = sum(sum_scores_final)    final_total_max = sum(sum_total_final)    total_final_score = round(average(final_total, final_total_max))    percent_total_final_score = total_final_score / 100    weighted_total_final = round(average_weighted(final_total, final_total_max, final_weight), 2)    # Total Grade scores and functions are defined here    sum_total_scores = (total_homework_score + total_test_score + total_quiz_score + total_project_score +                        total_final_score ) / 5    final_score = round(average(sum_total_scores, 100))    percent_final_score = final_score / 100    weighted_total = round(weighted_total_homework + weighted_total_quiz + weighted_total_test + weighted_total_project                           + weighted_total_final)    # The answers to each of the functions will be printed out here    print("Homework Grade:", total_homework_score, ":", letter_grade(percent_total_homework_score))    print("Quiz Grade:", total_quiz_score, ":", letter_grade(percent_total_quiz_score))    print("Test Grade:", total_test_score, ":", letter_grade(percent_total_test_score))    print("Project Grade:", total_project_score, ':', letter_grade(percent_total_project_score))    print("Final Score:", total_final_score, ':', letter_grade(percent_total_final_score))    print("Overall Grade:", final_score, ':', letter_grade(percent_final_score))    final_dictionary = {"Homework": [total_homework_score, letter_grade(percent_total_homework_score)],                        "Quizzes": [total_quiz_score, letter_grade(percent_total_quiz_score)],                        "Tests": [total_test_score, letter_grade(percent_total_test_score)],                        "Projects": [total_project_score, letter_grade(percent_total_project_score)],                        "Final": [total_final_score, letter_grade(percent_total_final_score)]}# The average function takes the total scores acheived and divides it by the# total score possible to get the grade as a percentagedef average(score_list, max_list):    avg = (score_list / max_list) * 100    return avg# The letter_grade function takes the scores of each and converts the percentage# to an actaul letter grade to be printed outdef letter_grade(percent):    if (percent <= 1 and percent >= .90):        return "A"    elif (percent < .9 and percent >= .80):        return "B"    elif (percent < .8 and percent >= .7):        return "C"    elif (percent < .7 and percent >= .6):        return "D"    else:        return "F"# The average_weighted function takes the weight percentage of each function# and then spits out the weighted percent of it which will be added later to# give the final grade totaldef average_weighted(score_list, max_list, weight):    avg_weighted = (score_list / max_list) * (weight)    return avg_weightedread_grade_data(open('lab8input.txt', 'r'))# def write_grade_report(filehandle, data):# write_grade_report(open('.txt', 'w'), final_dictionary)